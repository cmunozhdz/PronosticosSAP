'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.1022
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.1022.
'
Namespace CteSigeProCentralWbSrv
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SigeProCentralWbSrvSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class SigeProCentralWbSrv
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ValidaUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ArchivosProcesadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EstadoWsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDsAgentesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDsEstatusAnualEnvioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDesContenidoFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDsPronosticoXAgentePeriodoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FnGetDsPronosticosXDivisionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FnGuardaPronosticoXDivisionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FnGetDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDsNegociosAsignadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDsPeriodosXDivisionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDsPermisosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FnGuardaEstadoPeriodoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDsMovsPronosticosXDivisionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FnSendMailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetClientesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FnGetDsSapPRODUCTOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FnGetDsSapExistenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FnGetDsMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVtasXAgenteMesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.PronosticosSAP.My.MySettings.Default.PronosticosSAP_CteSigeProCentralWbSrv_SigeProCentralWbSrv
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ValidaUsuarioCompleted As ValidaUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ArchivosProcesadosCompleted As ArchivosProcesadosCompletedEventHandler
        
        '''<remarks/>
        Public Event EstadoWsCompleted As EstadoWsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDsAgentesCompleted As GetDsAgentesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDsEstatusAnualEnvioCompleted As GetDsEstatusAnualEnvioCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDesContenidoFileCompleted As GetDesContenidoFileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDsPronosticoXAgentePeriodoCompleted As GetDsPronosticoXAgentePeriodoCompletedEventHandler
        
        '''<remarks/>
        Public Event FnGetDsPronosticosXDivisionCompleted As FnGetDsPronosticosXDivisionCompletedEventHandler
        
        '''<remarks/>
        Public Event FnGuardaPronosticoXDivisionCompleted As FnGuardaPronosticoXDivisionCompletedEventHandler
        
        '''<remarks/>
        Public Event FnGetDateCompleted As FnGetDateCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDsNegociosAsignadosCompleted As GetDsNegociosAsignadosCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDsPeriodosXDivisionCompleted As GetDsPeriodosXDivisionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDsPermisosCompleted As GetDsPermisosCompletedEventHandler
        
        '''<remarks/>
        Public Event FnGuardaEstadoPeriodoCompleted As FnGuardaEstadoPeriodoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDsMovsPronosticosXDivisionCompleted As GetDsMovsPronosticosXDivisionCompletedEventHandler
        
        '''<remarks/>
        Public Event FnSendMailCompleted As FnSendMailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetClientesCompleted As GetClientesCompletedEventHandler
        
        '''<remarks/>
        Public Event FnGetDsSapPRODUCTOSCompleted As FnGetDsSapPRODUCTOSCompletedEventHandler
        
        '''<remarks/>
        Public Event FnGetDsSapExistenciasCompleted As FnGetDsSapExistenciasCompletedEventHandler
        
        '''<remarks/>
        Public Event FnGetDsMensajesCompleted As FnGetDsMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVtasXAgenteMesCompleted As GetVtasXAgenteMesCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidaUsuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidaUsuario(ByVal pstrUsuario As String, ByVal pStrPassword As String) As Integer
            Dim results() As Object = Me.Invoke("ValidaUsuario", New Object() {pstrUsuario, pStrPassword})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidaUsuarioAsync(ByVal pstrUsuario As String, ByVal pStrPassword As String)
            Me.ValidaUsuarioAsync(pstrUsuario, pStrPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidaUsuarioAsync(ByVal pstrUsuario As String, ByVal pStrPassword As String, ByVal userState As Object)
            If (Me.ValidaUsuarioOperationCompleted Is Nothing) Then
                Me.ValidaUsuarioOperationCompleted = AddressOf Me.OnValidaUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ValidaUsuario", New Object() {pstrUsuario, pStrPassword}, Me.ValidaUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidaUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidaUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidaUsuarioCompleted(Me, New ValidaUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ArchivosProcesados", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ArchivosProcesados(ByVal pstrFileName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal pFechaIni As System.Nullable(Of Date), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal pFechaFin As System.Nullable(Of Date), ByVal pCveAgente As String, ByVal pListaStatus As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ArchivosProcesados", New Object() {pstrFileName, pFechaIni, pFechaFin, pCveAgente, pListaStatus})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ArchivosProcesadosAsync(ByVal pstrFileName As String, ByVal pFechaIni As System.Nullable(Of Date), ByVal pFechaFin As System.Nullable(Of Date), ByVal pCveAgente As String, ByVal pListaStatus As String)
            Me.ArchivosProcesadosAsync(pstrFileName, pFechaIni, pFechaFin, pCveAgente, pListaStatus, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ArchivosProcesadosAsync(ByVal pstrFileName As String, ByVal pFechaIni As System.Nullable(Of Date), ByVal pFechaFin As System.Nullable(Of Date), ByVal pCveAgente As String, ByVal pListaStatus As String, ByVal userState As Object)
            If (Me.ArchivosProcesadosOperationCompleted Is Nothing) Then
                Me.ArchivosProcesadosOperationCompleted = AddressOf Me.OnArchivosProcesadosOperationCompleted
            End If
            Me.InvokeAsync("ArchivosProcesados", New Object() {pstrFileName, pFechaIni, pFechaFin, pCveAgente, pListaStatus}, Me.ArchivosProcesadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnArchivosProcesadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ArchivosProcesadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ArchivosProcesadosCompleted(Me, New ArchivosProcesadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EstadoWs", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EstadoWs() As String
            Dim results() As Object = Me.Invoke("EstadoWs", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EstadoWsAsync()
            Me.EstadoWsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EstadoWsAsync(ByVal userState As Object)
            If (Me.EstadoWsOperationCompleted Is Nothing) Then
                Me.EstadoWsOperationCompleted = AddressOf Me.OnEstadoWsOperationCompleted
            End If
            Me.InvokeAsync("EstadoWs", New Object(-1) {}, Me.EstadoWsOperationCompleted, userState)
        End Sub
        
        Private Sub OnEstadoWsOperationCompleted(ByVal arg As Object)
            If (Not (Me.EstadoWsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EstadoWsCompleted(Me, New EstadoWsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDsAgentes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDsAgentes(ByVal ClaveAgente As String, ByVal Descripcion As String, ByVal Status As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDsAgentes", New Object() {ClaveAgente, Descripcion, Status})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDsAgentesAsync(ByVal ClaveAgente As String, ByVal Descripcion As String, ByVal Status As String)
            Me.GetDsAgentesAsync(ClaveAgente, Descripcion, Status, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDsAgentesAsync(ByVal ClaveAgente As String, ByVal Descripcion As String, ByVal Status As String, ByVal userState As Object)
            If (Me.GetDsAgentesOperationCompleted Is Nothing) Then
                Me.GetDsAgentesOperationCompleted = AddressOf Me.OnGetDsAgentesOperationCompleted
            End If
            Me.InvokeAsync("GetDsAgentes", New Object() {ClaveAgente, Descripcion, Status}, Me.GetDsAgentesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDsAgentesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDsAgentesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDsAgentesCompleted(Me, New GetDsAgentesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDsEstatusAnualEnvio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDsEstatusAnualEnvio(ByVal Negocio As String, ByVal Anio As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDsEstatusAnualEnvio", New Object() {Negocio, Anio})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDsEstatusAnualEnvioAsync(ByVal Negocio As String, ByVal Anio As Integer)
            Me.GetDsEstatusAnualEnvioAsync(Negocio, Anio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDsEstatusAnualEnvioAsync(ByVal Negocio As String, ByVal Anio As Integer, ByVal userState As Object)
            If (Me.GetDsEstatusAnualEnvioOperationCompleted Is Nothing) Then
                Me.GetDsEstatusAnualEnvioOperationCompleted = AddressOf Me.OnGetDsEstatusAnualEnvioOperationCompleted
            End If
            Me.InvokeAsync("GetDsEstatusAnualEnvio", New Object() {Negocio, Anio}, Me.GetDsEstatusAnualEnvioOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDsEstatusAnualEnvioOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDsEstatusAnualEnvioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDsEstatusAnualEnvioCompleted(Me, New GetDsEstatusAnualEnvioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDesContenidoFile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDesContenidoFile(ByVal pstrFileName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDesContenidoFile", New Object() {pstrFileName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDesContenidoFileAsync(ByVal pstrFileName As String)
            Me.GetDesContenidoFileAsync(pstrFileName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDesContenidoFileAsync(ByVal pstrFileName As String, ByVal userState As Object)
            If (Me.GetDesContenidoFileOperationCompleted Is Nothing) Then
                Me.GetDesContenidoFileOperationCompleted = AddressOf Me.OnGetDesContenidoFileOperationCompleted
            End If
            Me.InvokeAsync("GetDesContenidoFile", New Object() {pstrFileName}, Me.GetDesContenidoFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDesContenidoFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDesContenidoFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDesContenidoFileCompleted(Me, New GetDesContenidoFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDsPronosticoXAgentePeriodo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDsPronosticoXAgentePeriodo(ByVal pAgente As String, ByVal pFecha As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDsPronosticoXAgentePeriodo", New Object() {pAgente, pFecha})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDsPronosticoXAgentePeriodoAsync(ByVal pAgente As String, ByVal pFecha As Date)
            Me.GetDsPronosticoXAgentePeriodoAsync(pAgente, pFecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDsPronosticoXAgentePeriodoAsync(ByVal pAgente As String, ByVal pFecha As Date, ByVal userState As Object)
            If (Me.GetDsPronosticoXAgentePeriodoOperationCompleted Is Nothing) Then
                Me.GetDsPronosticoXAgentePeriodoOperationCompleted = AddressOf Me.OnGetDsPronosticoXAgentePeriodoOperationCompleted
            End If
            Me.InvokeAsync("GetDsPronosticoXAgentePeriodo", New Object() {pAgente, pFecha}, Me.GetDsPronosticoXAgentePeriodoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDsPronosticoXAgentePeriodoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDsPronosticoXAgentePeriodoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDsPronosticoXAgentePeriodoCompleted(Me, New GetDsPronosticoXAgentePeriodoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FnGetDsPronosticosXDivision", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FnGetDsPronosticosXDivision(ByVal Anio As Integer, ByVal Division As String, ByVal Usuario As String, ByVal ProductoActivo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("FnGetDsPronosticosXDivision", New Object() {Anio, Division, Usuario, ProductoActivo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FnGetDsPronosticosXDivisionAsync(ByVal Anio As Integer, ByVal Division As String, ByVal Usuario As String, ByVal ProductoActivo As String)
            Me.FnGetDsPronosticosXDivisionAsync(Anio, Division, Usuario, ProductoActivo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FnGetDsPronosticosXDivisionAsync(ByVal Anio As Integer, ByVal Division As String, ByVal Usuario As String, ByVal ProductoActivo As String, ByVal userState As Object)
            If (Me.FnGetDsPronosticosXDivisionOperationCompleted Is Nothing) Then
                Me.FnGetDsPronosticosXDivisionOperationCompleted = AddressOf Me.OnFnGetDsPronosticosXDivisionOperationCompleted
            End If
            Me.InvokeAsync("FnGetDsPronosticosXDivision", New Object() {Anio, Division, Usuario, ProductoActivo}, Me.FnGetDsPronosticosXDivisionOperationCompleted, userState)
        End Sub
        
        Private Sub OnFnGetDsPronosticosXDivisionOperationCompleted(ByVal arg As Object)
            If (Not (Me.FnGetDsPronosticosXDivisionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FnGetDsPronosticosXDivisionCompleted(Me, New FnGetDsPronosticosXDivisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FnGuardaPronosticoXDivision", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FnGuardaPronosticoXDivision(ByVal Division As String, ByVal Anio As Integer, ByVal Periodo As Integer, ByVal Centro As String, ByVal Producto As String, ByVal Cantidad As Double, ByVal UserName As String) As Boolean
            Dim results() As Object = Me.Invoke("FnGuardaPronosticoXDivision", New Object() {Division, Anio, Periodo, Centro, Producto, Cantidad, UserName})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FnGuardaPronosticoXDivisionAsync(ByVal Division As String, ByVal Anio As Integer, ByVal Periodo As Integer, ByVal Centro As String, ByVal Producto As String, ByVal Cantidad As Double, ByVal UserName As String)
            Me.FnGuardaPronosticoXDivisionAsync(Division, Anio, Periodo, Centro, Producto, Cantidad, UserName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FnGuardaPronosticoXDivisionAsync(ByVal Division As String, ByVal Anio As Integer, ByVal Periodo As Integer, ByVal Centro As String, ByVal Producto As String, ByVal Cantidad As Double, ByVal UserName As String, ByVal userState As Object)
            If (Me.FnGuardaPronosticoXDivisionOperationCompleted Is Nothing) Then
                Me.FnGuardaPronosticoXDivisionOperationCompleted = AddressOf Me.OnFnGuardaPronosticoXDivisionOperationCompleted
            End If
            Me.InvokeAsync("FnGuardaPronosticoXDivision", New Object() {Division, Anio, Periodo, Centro, Producto, Cantidad, UserName}, Me.FnGuardaPronosticoXDivisionOperationCompleted, userState)
        End Sub
        
        Private Sub OnFnGuardaPronosticoXDivisionOperationCompleted(ByVal arg As Object)
            If (Not (Me.FnGuardaPronosticoXDivisionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FnGuardaPronosticoXDivisionCompleted(Me, New FnGuardaPronosticoXDivisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FnGetDate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FnGetDate() As Date
            Dim results() As Object = Me.Invoke("FnGetDate", New Object(-1) {})
            Return CType(results(0),Date)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FnGetDateAsync()
            Me.FnGetDateAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FnGetDateAsync(ByVal userState As Object)
            If (Me.FnGetDateOperationCompleted Is Nothing) Then
                Me.FnGetDateOperationCompleted = AddressOf Me.OnFnGetDateOperationCompleted
            End If
            Me.InvokeAsync("FnGetDate", New Object(-1) {}, Me.FnGetDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnFnGetDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.FnGetDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FnGetDateCompleted(Me, New FnGetDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDsNegociosAsignados", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDsNegociosAsignados(ByVal pstrUsuario As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDsNegociosAsignados", New Object() {pstrUsuario})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDsNegociosAsignadosAsync(ByVal pstrUsuario As String)
            Me.GetDsNegociosAsignadosAsync(pstrUsuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDsNegociosAsignadosAsync(ByVal pstrUsuario As String, ByVal userState As Object)
            If (Me.GetDsNegociosAsignadosOperationCompleted Is Nothing) Then
                Me.GetDsNegociosAsignadosOperationCompleted = AddressOf Me.OnGetDsNegociosAsignadosOperationCompleted
            End If
            Me.InvokeAsync("GetDsNegociosAsignados", New Object() {pstrUsuario}, Me.GetDsNegociosAsignadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDsNegociosAsignadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDsNegociosAsignadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDsNegociosAsignadosCompleted(Me, New GetDsNegociosAsignadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDsPeriodosXDivision", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDsPeriodosXDivision(ByVal Anio As Integer, ByVal Division As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDsPeriodosXDivision", New Object() {Anio, Division})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDsPeriodosXDivisionAsync(ByVal Anio As Integer, ByVal Division As String)
            Me.GetDsPeriodosXDivisionAsync(Anio, Division, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDsPeriodosXDivisionAsync(ByVal Anio As Integer, ByVal Division As String, ByVal userState As Object)
            If (Me.GetDsPeriodosXDivisionOperationCompleted Is Nothing) Then
                Me.GetDsPeriodosXDivisionOperationCompleted = AddressOf Me.OnGetDsPeriodosXDivisionOperationCompleted
            End If
            Me.InvokeAsync("GetDsPeriodosXDivision", New Object() {Anio, Division}, Me.GetDsPeriodosXDivisionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDsPeriodosXDivisionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDsPeriodosXDivisionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDsPeriodosXDivisionCompleted(Me, New GetDsPeriodosXDivisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDsPermisos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDsPermisos(ByVal pstrUserId As String, ByVal pStrObjectId As String, ByVal pStrActividad As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDsPermisos", New Object() {pstrUserId, pStrObjectId, pStrActividad})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDsPermisosAsync(ByVal pstrUserId As String, ByVal pStrObjectId As String, ByVal pStrActividad As String)
            Me.GetDsPermisosAsync(pstrUserId, pStrObjectId, pStrActividad, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDsPermisosAsync(ByVal pstrUserId As String, ByVal pStrObjectId As String, ByVal pStrActividad As String, ByVal userState As Object)
            If (Me.GetDsPermisosOperationCompleted Is Nothing) Then
                Me.GetDsPermisosOperationCompleted = AddressOf Me.OnGetDsPermisosOperationCompleted
            End If
            Me.InvokeAsync("GetDsPermisos", New Object() {pstrUserId, pStrObjectId, pStrActividad}, Me.GetDsPermisosOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDsPermisosOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDsPermisosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDsPermisosCompleted(Me, New GetDsPermisosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FnGuardaEstadoPeriodo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FnGuardaEstadoPeriodo(ByVal Division As String, ByVal Anio As Integer, ByVal lstPeriodos As String, ByVal Status As String, ByVal StatusAnterior As String, ByVal Usuario As String) As Integer
            Dim results() As Object = Me.Invoke("FnGuardaEstadoPeriodo", New Object() {Division, Anio, lstPeriodos, Status, StatusAnterior, Usuario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FnGuardaEstadoPeriodoAsync(ByVal Division As String, ByVal Anio As Integer, ByVal lstPeriodos As String, ByVal Status As String, ByVal StatusAnterior As String, ByVal Usuario As String)
            Me.FnGuardaEstadoPeriodoAsync(Division, Anio, lstPeriodos, Status, StatusAnterior, Usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FnGuardaEstadoPeriodoAsync(ByVal Division As String, ByVal Anio As Integer, ByVal lstPeriodos As String, ByVal Status As String, ByVal StatusAnterior As String, ByVal Usuario As String, ByVal userState As Object)
            If (Me.FnGuardaEstadoPeriodoOperationCompleted Is Nothing) Then
                Me.FnGuardaEstadoPeriodoOperationCompleted = AddressOf Me.OnFnGuardaEstadoPeriodoOperationCompleted
            End If
            Me.InvokeAsync("FnGuardaEstadoPeriodo", New Object() {Division, Anio, lstPeriodos, Status, StatusAnterior, Usuario}, Me.FnGuardaEstadoPeriodoOperationCompleted, userState)
        End Sub
        
        Private Sub OnFnGuardaEstadoPeriodoOperationCompleted(ByVal arg As Object)
            If (Not (Me.FnGuardaEstadoPeriodoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FnGuardaEstadoPeriodoCompleted(Me, New FnGuardaEstadoPeriodoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDsMovsPronosticosXDivision", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDsMovsPronosticosXDivision(ByVal Anio As Integer, ByVal Periodo As Integer, ByVal Centro As String, ByVal Producto As String, ByVal Division As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDsMovsPronosticosXDivision", New Object() {Anio, Periodo, Centro, Producto, Division})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDsMovsPronosticosXDivisionAsync(ByVal Anio As Integer, ByVal Periodo As Integer, ByVal Centro As String, ByVal Producto As String, ByVal Division As String)
            Me.GetDsMovsPronosticosXDivisionAsync(Anio, Periodo, Centro, Producto, Division, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDsMovsPronosticosXDivisionAsync(ByVal Anio As Integer, ByVal Periodo As Integer, ByVal Centro As String, ByVal Producto As String, ByVal Division As String, ByVal userState As Object)
            If (Me.GetDsMovsPronosticosXDivisionOperationCompleted Is Nothing) Then
                Me.GetDsMovsPronosticosXDivisionOperationCompleted = AddressOf Me.OnGetDsMovsPronosticosXDivisionOperationCompleted
            End If
            Me.InvokeAsync("GetDsMovsPronosticosXDivision", New Object() {Anio, Periodo, Centro, Producto, Division}, Me.GetDsMovsPronosticosXDivisionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDsMovsPronosticosXDivisionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDsMovsPronosticosXDivisionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDsMovsPronosticosXDivisionCompleted(Me, New GetDsMovsPronosticosXDivisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FnSendMail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FnSendMail(ByVal pstrDestinatario As String, ByVal pstrSubject As String, ByVal pstrMensaje As String) As Boolean
            Dim results() As Object = Me.Invoke("FnSendMail", New Object() {pstrDestinatario, pstrSubject, pstrMensaje})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FnSendMailAsync(ByVal pstrDestinatario As String, ByVal pstrSubject As String, ByVal pstrMensaje As String)
            Me.FnSendMailAsync(pstrDestinatario, pstrSubject, pstrMensaje, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FnSendMailAsync(ByVal pstrDestinatario As String, ByVal pstrSubject As String, ByVal pstrMensaje As String, ByVal userState As Object)
            If (Me.FnSendMailOperationCompleted Is Nothing) Then
                Me.FnSendMailOperationCompleted = AddressOf Me.OnFnSendMailOperationCompleted
            End If
            Me.InvokeAsync("FnSendMail", New Object() {pstrDestinatario, pstrSubject, pstrMensaje}, Me.FnSendMailOperationCompleted, userState)
        End Sub
        
        Private Sub OnFnSendMailOperationCompleted(ByVal arg As Object)
            If (Not (Me.FnSendMailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FnSendMailCompleted(Me, New FnSendMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetClientes(ByVal pIdAgente As String, ByVal pFecha As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetClientes", New Object() {pIdAgente, pFecha})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetClientesAsync(ByVal pIdAgente As String, ByVal pFecha As Date)
            Me.GetClientesAsync(pIdAgente, pFecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetClientesAsync(ByVal pIdAgente As String, ByVal pFecha As Date, ByVal userState As Object)
            If (Me.GetClientesOperationCompleted Is Nothing) Then
                Me.GetClientesOperationCompleted = AddressOf Me.OnGetClientesOperationCompleted
            End If
            Me.InvokeAsync("GetClientes", New Object() {pIdAgente, pFecha}, Me.GetClientesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetClientesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetClientesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetClientesCompleted(Me, New GetClientesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FnGetDsSapPRODUCTOS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FnGetDsSapPRODUCTOS(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal ClaveProducto As System.Nullable(Of Integer), ByVal Descripcion As String, ByVal Negocio As String, ByVal Registro As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("FnGetDsSapPRODUCTOS", New Object() {ClaveProducto, Descripcion, Negocio, Registro})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FnGetDsSapPRODUCTOSAsync(ByVal ClaveProducto As System.Nullable(Of Integer), ByVal Descripcion As String, ByVal Negocio As String, ByVal Registro As Integer)
            Me.FnGetDsSapPRODUCTOSAsync(ClaveProducto, Descripcion, Negocio, Registro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FnGetDsSapPRODUCTOSAsync(ByVal ClaveProducto As System.Nullable(Of Integer), ByVal Descripcion As String, ByVal Negocio As String, ByVal Registro As Integer, ByVal userState As Object)
            If (Me.FnGetDsSapPRODUCTOSOperationCompleted Is Nothing) Then
                Me.FnGetDsSapPRODUCTOSOperationCompleted = AddressOf Me.OnFnGetDsSapPRODUCTOSOperationCompleted
            End If
            Me.InvokeAsync("FnGetDsSapPRODUCTOS", New Object() {ClaveProducto, Descripcion, Negocio, Registro}, Me.FnGetDsSapPRODUCTOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnFnGetDsSapPRODUCTOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.FnGetDsSapPRODUCTOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FnGetDsSapPRODUCTOSCompleted(Me, New FnGetDsSapPRODUCTOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FnGetDsSapExistencias", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FnGetDsSapExistencias(ByVal pListaNomaterial As String, ByVal pListaCentro As String, ByVal pListaAlmacen As String, ByVal pListaLotes As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("FnGetDsSapExistencias", New Object() {pListaNomaterial, pListaCentro, pListaAlmacen, pListaLotes})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FnGetDsSapExistenciasAsync(ByVal pListaNomaterial As String, ByVal pListaCentro As String, ByVal pListaAlmacen As String, ByVal pListaLotes As String)
            Me.FnGetDsSapExistenciasAsync(pListaNomaterial, pListaCentro, pListaAlmacen, pListaLotes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FnGetDsSapExistenciasAsync(ByVal pListaNomaterial As String, ByVal pListaCentro As String, ByVal pListaAlmacen As String, ByVal pListaLotes As String, ByVal userState As Object)
            If (Me.FnGetDsSapExistenciasOperationCompleted Is Nothing) Then
                Me.FnGetDsSapExistenciasOperationCompleted = AddressOf Me.OnFnGetDsSapExistenciasOperationCompleted
            End If
            Me.InvokeAsync("FnGetDsSapExistencias", New Object() {pListaNomaterial, pListaCentro, pListaAlmacen, pListaLotes}, Me.FnGetDsSapExistenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnFnGetDsSapExistenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.FnGetDsSapExistenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FnGetDsSapExistenciasCompleted(Me, New FnGetDsSapExistenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FnGetDsMensajes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FnGetDsMensajes(ByVal pUser As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("FnGetDsMensajes", New Object() {pUser})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FnGetDsMensajesAsync(ByVal pUser As String)
            Me.FnGetDsMensajesAsync(pUser, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FnGetDsMensajesAsync(ByVal pUser As String, ByVal userState As Object)
            If (Me.FnGetDsMensajesOperationCompleted Is Nothing) Then
                Me.FnGetDsMensajesOperationCompleted = AddressOf Me.OnFnGetDsMensajesOperationCompleted
            End If
            Me.InvokeAsync("FnGetDsMensajes", New Object() {pUser}, Me.FnGetDsMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnFnGetDsMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.FnGetDsMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FnGetDsMensajesCompleted(Me, New FnGetDsMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVtasXAgenteMes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVtasXAgenteMes(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal pAnio As System.Nullable(Of Integer), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal pMes As System.Nullable(Of Integer), ByVal pCentros As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal pMaterial As System.Nullable(Of Integer), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal pAgente As System.Nullable(Of Integer)) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetVtasXAgenteMes", New Object() {pAnio, pMes, pCentros, pMaterial, pAgente})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVtasXAgenteMesAsync(ByVal pAnio As System.Nullable(Of Integer), ByVal pMes As System.Nullable(Of Integer), ByVal pCentros As String, ByVal pMaterial As System.Nullable(Of Integer), ByVal pAgente As System.Nullable(Of Integer))
            Me.GetVtasXAgenteMesAsync(pAnio, pMes, pCentros, pMaterial, pAgente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVtasXAgenteMesAsync(ByVal pAnio As System.Nullable(Of Integer), ByVal pMes As System.Nullable(Of Integer), ByVal pCentros As String, ByVal pMaterial As System.Nullable(Of Integer), ByVal pAgente As System.Nullable(Of Integer), ByVal userState As Object)
            If (Me.GetVtasXAgenteMesOperationCompleted Is Nothing) Then
                Me.GetVtasXAgenteMesOperationCompleted = AddressOf Me.OnGetVtasXAgenteMesOperationCompleted
            End If
            Me.InvokeAsync("GetVtasXAgenteMes", New Object() {pAnio, pMes, pCentros, pMaterial, pAgente}, Me.GetVtasXAgenteMesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVtasXAgenteMesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVtasXAgenteMesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVtasXAgenteMesCompleted(Me, New GetVtasXAgenteMesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ValidaUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ValidaUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidaUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ArchivosProcesadosCompletedEventHandler(ByVal sender As Object, ByVal e As ArchivosProcesadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ArchivosProcesadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub EstadoWsCompletedEventHandler(ByVal sender As Object, ByVal e As EstadoWsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EstadoWsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetDsAgentesCompletedEventHandler(ByVal sender As Object, ByVal e As GetDsAgentesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDsAgentesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetDsEstatusAnualEnvioCompletedEventHandler(ByVal sender As Object, ByVal e As GetDsEstatusAnualEnvioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDsEstatusAnualEnvioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetDesContenidoFileCompletedEventHandler(ByVal sender As Object, ByVal e As GetDesContenidoFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDesContenidoFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetDsPronosticoXAgentePeriodoCompletedEventHandler(ByVal sender As Object, ByVal e As GetDsPronosticoXAgentePeriodoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDsPronosticoXAgentePeriodoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FnGetDsPronosticosXDivisionCompletedEventHandler(ByVal sender As Object, ByVal e As FnGetDsPronosticosXDivisionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FnGetDsPronosticosXDivisionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FnGuardaPronosticoXDivisionCompletedEventHandler(ByVal sender As Object, ByVal e As FnGuardaPronosticoXDivisionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FnGuardaPronosticoXDivisionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FnGetDateCompletedEventHandler(ByVal sender As Object, ByVal e As FnGetDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FnGetDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Date)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetDsNegociosAsignadosCompletedEventHandler(ByVal sender As Object, ByVal e As GetDsNegociosAsignadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDsNegociosAsignadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetDsPeriodosXDivisionCompletedEventHandler(ByVal sender As Object, ByVal e As GetDsPeriodosXDivisionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDsPeriodosXDivisionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetDsPermisosCompletedEventHandler(ByVal sender As Object, ByVal e As GetDsPermisosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDsPermisosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FnGuardaEstadoPeriodoCompletedEventHandler(ByVal sender As Object, ByVal e As FnGuardaEstadoPeriodoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FnGuardaEstadoPeriodoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetDsMovsPronosticosXDivisionCompletedEventHandler(ByVal sender As Object, ByVal e As GetDsMovsPronosticosXDivisionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDsMovsPronosticosXDivisionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FnSendMailCompletedEventHandler(ByVal sender As Object, ByVal e As FnSendMailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FnSendMailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetClientesCompletedEventHandler(ByVal sender As Object, ByVal e As GetClientesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetClientesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FnGetDsSapPRODUCTOSCompletedEventHandler(ByVal sender As Object, ByVal e As FnGetDsSapPRODUCTOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FnGetDsSapPRODUCTOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FnGetDsSapExistenciasCompletedEventHandler(ByVal sender As Object, ByVal e As FnGetDsSapExistenciasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FnGetDsSapExistenciasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FnGetDsMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As FnGetDsMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FnGetDsMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetVtasXAgenteMesCompletedEventHandler(ByVal sender As Object, ByVal e As GetVtasXAgenteMesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVtasXAgenteMesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
