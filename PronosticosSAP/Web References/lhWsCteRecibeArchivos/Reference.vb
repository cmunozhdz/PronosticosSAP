'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.1008
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.1008.
'
Namespace lhWsCteRecibeArchivos
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WsRecibeArchivosSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WsRecibeArchivos
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ErrDisplayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EchoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FileLengthOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetErrorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPathRecepcionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CalendarizarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaArchivoBitacoraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddArchivoBitacoraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransformarArchivoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.PronosticosSAP.My.MySettings.Default.PronosticosSAP_lhWsCteRecibeArchivos_WsRecibeArchivos
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ErrDisplayCompleted As ErrDisplayCompletedEventHandler
        
        '''<remarks/>
        Public Event EchoCompleted As EchoCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveFileCompleted As SaveFileCompletedEventHandler
        
        '''<remarks/>
        Public Event FileLengthCompleted As FileLengthCompletedEventHandler
        
        '''<remarks/>
        Public Event GetErrorCompleted As GetErrorCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPathRecepcionCompleted As GetPathRecepcionCompletedEventHandler
        
        '''<remarks/>
        Public Event CalendarizarCompleted As CalendarizarCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaArchivoBitacoraCompleted As ConsultaArchivoBitacoraCompletedEventHandler
        
        '''<remarks/>
        Public Event AddArchivoBitacoraCompleted As AddArchivoBitacoraCompletedEventHandler
        
        '''<remarks/>
        Public Event TransformarArchivoCompleted As TransformarArchivoCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ErrDisplay", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ErrDisplay() As String
            Dim results() As Object = Me.Invoke("ErrDisplay", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ErrDisplayAsync()
            Me.ErrDisplayAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ErrDisplayAsync(ByVal userState As Object)
            If (Me.ErrDisplayOperationCompleted Is Nothing) Then
                Me.ErrDisplayOperationCompleted = AddressOf Me.OnErrDisplayOperationCompleted
            End If
            Me.InvokeAsync("ErrDisplay", New Object(-1) {}, Me.ErrDisplayOperationCompleted, userState)
        End Sub
        
        Private Sub OnErrDisplayOperationCompleted(ByVal arg As Object)
            If (Not (Me.ErrDisplayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ErrDisplayCompleted(Me, New ErrDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Echo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Echo() As String
            Dim results() As Object = Me.Invoke("Echo", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EchoAsync()
            Me.EchoAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EchoAsync(ByVal userState As Object)
            If (Me.EchoOperationCompleted Is Nothing) Then
                Me.EchoOperationCompleted = AddressOf Me.OnEchoOperationCompleted
            End If
            Me.InvokeAsync("Echo", New Object(-1) {}, Me.EchoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEchoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EchoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EchoCompleted(Me, New EchoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveFile(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal mVarArr() As Byte, ByVal docName As String, ByVal pStrRemitente As String, ByVal pstrEnviarMail As String, ByVal intChunk As Integer, ByVal ParametrosEntrada As String, ByVal mParNegocio As String) As Integer
            Dim results() As Object = Me.Invoke("SaveFile", New Object() {mVarArr, docName, pStrRemitente, pstrEnviarMail, intChunk, ParametrosEntrada, mParNegocio})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveFileAsync(ByVal mVarArr() As Byte, ByVal docName As String, ByVal pStrRemitente As String, ByVal pstrEnviarMail As String, ByVal intChunk As Integer, ByVal ParametrosEntrada As String, ByVal mParNegocio As String)
            Me.SaveFileAsync(mVarArr, docName, pStrRemitente, pstrEnviarMail, intChunk, ParametrosEntrada, mParNegocio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveFileAsync(ByVal mVarArr() As Byte, ByVal docName As String, ByVal pStrRemitente As String, ByVal pstrEnviarMail As String, ByVal intChunk As Integer, ByVal ParametrosEntrada As String, ByVal mParNegocio As String, ByVal userState As Object)
            If (Me.SaveFileOperationCompleted Is Nothing) Then
                Me.SaveFileOperationCompleted = AddressOf Me.OnSaveFileOperationCompleted
            End If
            Me.InvokeAsync("SaveFile", New Object() {mVarArr, docName, pStrRemitente, pstrEnviarMail, intChunk, ParametrosEntrada, mParNegocio}, Me.SaveFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveFileCompleted(Me, New SaveFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FileLength", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FileLength(ByVal docName As String) As Long
            Dim results() As Object = Me.Invoke("FileLength", New Object() {docName})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FileLengthAsync(ByVal docName As String)
            Me.FileLengthAsync(docName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FileLengthAsync(ByVal docName As String, ByVal userState As Object)
            If (Me.FileLengthOperationCompleted Is Nothing) Then
                Me.FileLengthOperationCompleted = AddressOf Me.OnFileLengthOperationCompleted
            End If
            Me.InvokeAsync("FileLength", New Object() {docName}, Me.FileLengthOperationCompleted, userState)
        End Sub
        
        Private Sub OnFileLengthOperationCompleted(ByVal arg As Object)
            If (Not (Me.FileLengthCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FileLengthCompleted(Me, New FileLengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetError", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetError(ByVal docName As String) As String
            Dim results() As Object = Me.Invoke("GetError", New Object() {docName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetErrorAsync(ByVal docName As String)
            Me.GetErrorAsync(docName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetErrorAsync(ByVal docName As String, ByVal userState As Object)
            If (Me.GetErrorOperationCompleted Is Nothing) Then
                Me.GetErrorOperationCompleted = AddressOf Me.OnGetErrorOperationCompleted
            End If
            Me.InvokeAsync("GetError", New Object() {docName}, Me.GetErrorOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetErrorOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetErrorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetErrorCompleted(Me, New GetErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPathRecepcion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPathRecepcion() As String
            Dim results() As Object = Me.Invoke("GetPathRecepcion", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPathRecepcionAsync()
            Me.GetPathRecepcionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPathRecepcionAsync(ByVal userState As Object)
            If (Me.GetPathRecepcionOperationCompleted Is Nothing) Then
                Me.GetPathRecepcionOperationCompleted = AddressOf Me.OnGetPathRecepcionOperationCompleted
            End If
            Me.InvokeAsync("GetPathRecepcion", New Object(-1) {}, Me.GetPathRecepcionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPathRecepcionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPathRecepcionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPathRecepcionCompleted(Me, New GetPathRecepcionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Calendarizar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Calendarizar() As Boolean
            Dim results() As Object = Me.Invoke("Calendarizar", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CalendarizarAsync()
            Me.CalendarizarAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CalendarizarAsync(ByVal userState As Object)
            If (Me.CalendarizarOperationCompleted Is Nothing) Then
                Me.CalendarizarOperationCompleted = AddressOf Me.OnCalendarizarOperationCompleted
            End If
            Me.InvokeAsync("Calendarizar", New Object(-1) {}, Me.CalendarizarOperationCompleted, userState)
        End Sub
        
        Private Sub OnCalendarizarOperationCompleted(ByVal arg As Object)
            If (Not (Me.CalendarizarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CalendarizarCompleted(Me, New CalendarizarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaArchivoBitacora", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaArchivoBitacora(ByVal pstrFilename As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal FechaIni As System.Nullable(Of Date), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal FechaFin As System.Nullable(Of Date), ByVal pCveAgente As String, ByVal pListaStatus As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaArchivoBitacora", New Object() {pstrFilename, FechaIni, FechaFin, pCveAgente, pListaStatus})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaArchivoBitacoraAsync(ByVal pstrFilename As String, ByVal FechaIni As System.Nullable(Of Date), ByVal FechaFin As System.Nullable(Of Date), ByVal pCveAgente As String, ByVal pListaStatus As String)
            Me.ConsultaArchivoBitacoraAsync(pstrFilename, FechaIni, FechaFin, pCveAgente, pListaStatus, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaArchivoBitacoraAsync(ByVal pstrFilename As String, ByVal FechaIni As System.Nullable(Of Date), ByVal FechaFin As System.Nullable(Of Date), ByVal pCveAgente As String, ByVal pListaStatus As String, ByVal userState As Object)
            If (Me.ConsultaArchivoBitacoraOperationCompleted Is Nothing) Then
                Me.ConsultaArchivoBitacoraOperationCompleted = AddressOf Me.OnConsultaArchivoBitacoraOperationCompleted
            End If
            Me.InvokeAsync("ConsultaArchivoBitacora", New Object() {pstrFilename, FechaIni, FechaFin, pCveAgente, pListaStatus}, Me.ConsultaArchivoBitacoraOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaArchivoBitacoraOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaArchivoBitacoraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaArchivoBitacoraCompleted(Me, New ConsultaArchivoBitacoraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddArchivoBitacora", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddArchivoBitacora(ByVal pstrFilename As String, ByRef pstrError As String) As Boolean
            Dim results() As Object = Me.Invoke("AddArchivoBitacora", New Object() {pstrFilename, pstrError})
            pstrError = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddArchivoBitacoraAsync(ByVal pstrFilename As String, ByVal pstrError As String)
            Me.AddArchivoBitacoraAsync(pstrFilename, pstrError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddArchivoBitacoraAsync(ByVal pstrFilename As String, ByVal pstrError As String, ByVal userState As Object)
            If (Me.AddArchivoBitacoraOperationCompleted Is Nothing) Then
                Me.AddArchivoBitacoraOperationCompleted = AddressOf Me.OnAddArchivoBitacoraOperationCompleted
            End If
            Me.InvokeAsync("AddArchivoBitacora", New Object() {pstrFilename, pstrError}, Me.AddArchivoBitacoraOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddArchivoBitacoraOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddArchivoBitacoraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddArchivoBitacoraCompleted(Me, New AddArchivoBitacoraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransformarArchivo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransformarArchivo(ByVal pStrFilename As String, ByVal pStrEstatus As String, ByVal pStrLista As String) As Integer
            Dim results() As Object = Me.Invoke("TransformarArchivo", New Object() {pStrFilename, pStrEstatus, pStrLista})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransformarArchivoAsync(ByVal pStrFilename As String, ByVal pStrEstatus As String, ByVal pStrLista As String)
            Me.TransformarArchivoAsync(pStrFilename, pStrEstatus, pStrLista, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransformarArchivoAsync(ByVal pStrFilename As String, ByVal pStrEstatus As String, ByVal pStrLista As String, ByVal userState As Object)
            If (Me.TransformarArchivoOperationCompleted Is Nothing) Then
                Me.TransformarArchivoOperationCompleted = AddressOf Me.OnTransformarArchivoOperationCompleted
            End If
            Me.InvokeAsync("TransformarArchivo", New Object() {pStrFilename, pStrEstatus, pStrLista}, Me.TransformarArchivoOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransformarArchivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransformarArchivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransformarArchivoCompleted(Me, New TransformarArchivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ErrDisplayCompletedEventHandler(ByVal sender As Object, ByVal e As ErrDisplayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ErrDisplayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub EchoCompletedEventHandler(ByVal sender As Object, ByVal e As EchoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EchoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SaveFileCompletedEventHandler(ByVal sender As Object, ByVal e As SaveFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FileLengthCompletedEventHandler(ByVal sender As Object, ByVal e As FileLengthCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FileLengthCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetErrorCompletedEventHandler(ByVal sender As Object, ByVal e As GetErrorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetErrorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetPathRecepcionCompletedEventHandler(ByVal sender As Object, ByVal e As GetPathRecepcionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPathRecepcionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CalendarizarCompletedEventHandler(ByVal sender As Object, ByVal e As CalendarizarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CalendarizarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ConsultaArchivoBitacoraCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaArchivoBitacoraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaArchivoBitacoraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AddArchivoBitacoraCompletedEventHandler(ByVal sender As Object, ByVal e As AddArchivoBitacoraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddArchivoBitacoraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pstrError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub TransformarArchivoCompletedEventHandler(ByVal sender As Object, ByVal e As TransformarArchivoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransformarArchivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
End Namespace
